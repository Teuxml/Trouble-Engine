How RFE Lua works:
Currently, the STAGE of the song is used. The path assets/stages/songStage.lua will be checked. Example: song's stage is testStage, stage file will be assets/stages/testStage.lua. Currently, the normal weeks do NOT use Lua.
Also, modcharts are supported. They go in the song folder with the JSONs. Example: song's name is testSong, modchart file will be assets/data/testSong/modchart.lua.
Notes are now supported. They go in assets/notes. The note type in noteTypes.txt must be the SAME name as the Lua file.

Current RFE Lua auto-defined variables:
boyfriend - Literally "boyfriend". Lol.

boyfriendMidpointX - Boyfriend's X midpoint (useful for camera stuff).

boyfriendMidpointY - Boyfriend's Y midpoint (useful for camera stuff).

boyfriendName - Boyfriend actor/player's name.

bpm - BPM of the song.

crochet - Crochet from Conductor.

curBeat - It's curBeat (lol).

curBPM - Current BPM.

curStep - It's curStep (lol).

defaultOpponentStrumX0-3 - Default x position for each opponent strum.

defaultPlayerStrumX0-3 - Default x position for each player strum.

defaultOpponentStrumY0-3 - Default y position for each opponent strum.

defaultPlayerStrumY0-3 - Default y position for each player strum.

girlfriend - Literally "girlfriend". Lol.

girlfriendName - Girlfriend actor/player's name.

instLength - Length of instrumental.

instPosition - Current position of instrumental.

health - Gives health from in game.

opponent - Literally "opponent". Lol.

opponentMidpointX - Your opponent's X midpoint (useful for camera stuff).

opponentMidpointY - Your opponent's Y midpoint (useful for camera stuff).

opponentName - Opponent actor/player's name.

optimized - Tells if game is optimized.

notOptimized - Tells if game is NOT optimized.

rootDir - Root directory of assets (works with mods).

songData - Name of song (not formatted).

songName - Name of song.

songPosition - Position of song gave by Conductor.

stepCrochet - stepCrochet from Conductor.

vocalsLength - Length of vocals.

vocalsPosition - Current position of vocals.

Current RFE Lua functions:
addActor(actor-name) - Adds a create actor to PlayState.

addActorFinishCallback(actor-name, callback-name) - Adds a finishing callback for an actor's animations with the name you choose.

addBackgroundGirls(bg-girls-name) - Adds a created BG girls instance to PlayState.

addSprite(sprite-name, is-active(bool)) - Adds a created sprite instance to PlayState (animated or not). (Set active to true for animated sprites).

addSpriteFinishCallback(sprite-name, callback-name) - Adds a finishing callback for sprite animations with the name you choose.

addSpriteIndiceAnimation(sprite-name, label-for-animation, animation-name, indice-list(array), framerate) - Adds an animation for a sprite by indices. Characters such as GF uses these.

addSpritePrefixAnimation(sprite-name, label-for-animation, animation-name, framerate, loops(bool)) - Adds an animation for a sprite by prefix. Anything that uses an XML will likely use this.

addToBoyfriendCamFollow(x, y) - Adds to Boyfriend's camFollow x/y position.

addToBoyfriendPosition(x, y) - Adds to Boyfriend's x/y position(s).

addToGirlfriendPosition(x, y) - Adds to Girlfriend's x/y position(s).

addToOpponentCamFollow(x, y) - Adds to the opponent's camFollow x/y position.

addToOpponentPosition(x, y) - Adds to the opponent's x/y position(s).

centerSpriteXY(sprite-name, x(bool), y(bool)) - Centers a sprite on the x/y axis.

changeActor(actor-name, new-character, add-actor, remove-old-actor, change-icon) - Changes the actor to the new character you choose.

changeTargetActor(actor-name, target-actor, change-icon) - Changes the target actor for a character. Does not remove or add any actors in any way.

destroyActor(actor) - Destroys an actor.

destroySprite(sprite) - Destroys a sprite.

drainHealth(number) - Drains your health by the number.

flipSpriteXY(sprite-name, x, y) - Flips a sprite's x/y positions.

giveActorHeight(actor-name) - Returns an actor's height.

giveActorMidpointX(actor-name) - Gives the X midpoint of an actor.

giveActorMidpointY(actor-name) - Gives the Y midpoint of an actor.

giveActorWidth(actor-name) - Returns an actor's width.

giveActorX(actor-name) - Returns an actor's x position.

giveActorY(actor-name) - Returns an actor's Y position.

giveHealth(number) - Gives you the number of health you set.

giveSpriteHeight(sprite-name) - Returns a sprite's height.

giveSpriteMidpointX(sprite-name) - Gives the X midpoint of a sprite.

giveSpriteMidpointY(sprite-name) - Gives the Y midpoint of a sprite.

giveSpriteWidth(sprite-name) - Returns a sprite's width.

giveActorX(sprite-name) - Returns a sprite's x position.

giveActorY(sprite-name) - Returns a sprite's Y position.

killActor(actor-name) - Kills an actor.

killSprite(sprite-name) - Kills a sprite.

makeActor(actor-name, isPlayer, x, y, alias) - Makes an extra actor. Useful for switching characters. The alias is what you'll use to do things with, if you supply it, otherwise, actor name is used.

makeAnimatedPackerSprite(sprite-name, path-to-image, x, y, antialiasing) - Makes an animated sprite based on a .txt file (spirit, certain background elements, etc.).

makeAnimatedSparrowSprite(sprite-name, path-to-image, x, y, antialiasing) - Makes an animated sprite based on a .xml file (characters, most background elements, etc.).

makeGraphic(sprite-name, width, height, color) - Makes a graphic on an existing sprite.

makePixelBackgroundGirls(bg-girls-name, x, y) - Self explanatory. Made for Week 6 porting.

makeSprite(sprite-name, path-to-image, x, y, antialiasing) - Makes a simple FlxSprite. Not animated.

performCameraAngleTween(tween-name, camera-name, angle, speed, ease-type) - Performs an angle tween on a(n) camera.

performCameraXTween(tween-name, camera-name, x, speed, ease-type) - Performs a tween on the x position of a(n) camera.

performCameraYTween(tween-name, camera-name, y, speed, ease-type) - Performs a tween on the y position of a(n) camera.

performCameraZoom(camera-name, zoom) - Performs a camera zoom by the amount you choose. Does not go into effect until camZooming is enabled.

performOpponentStrumAlphaTween(tween-name, strum-name-number, alpha, speed, ease-type) - Performs an alpha tween on the selected opponent strum.

performOpponentStrumAngleTween(tween-name, strum-name-number, angle, speed, ease-type) - Performs an angle tween on the selected opponent strum.

performOpponentStrumXTween(tween-name, strum-name-number, x, speed, ease-type) - Performs a tween on the x position of the selected opponent strum.

performOpponentStrumYTween(tween-name, strum-name-number, y, speed, ease-type) - Performs a tween on the y position of the selected opponent strum.

performPlayerStrumAlphaTween(tween-name, strum-name-number, alpha, speed, ease-type) - Performs an alpha tween on the selected player strum.

performPlayerStrumAngleTween(tween-name, strum-name-number, angle, speed, ease-type) - Performs an angle tween on the selected player strum.

performPlayerStrumXTween(tween-name, strum-name-number, x, speed, ease-type) - Performs a tween on the x position of the selected player strum.

performPlayerStrumYTween(tween-name, strum-name-number, y, speed, ease-type) - Performs a tween on the y position of the selected player strum.

performSpriteAlphaTween(tween-name, sprite-name, alpha, speed, ease-type) - Performs an alpha tween on a(n) sprite.

performSpriteAngleTween(tween-name, sprite-name, angle, speed, ease-type) - Performs an angle tween on a(n) sprite.

performSpriteXTween(tween-name, sprite-name, x, speed, ease-type) - Performs a tween on the x position of a(n) sprite.

performSpriteYTween(tween-name, sprite-name, y, speed, ease-type) - Performs a tween on the y position of a(n) sprite.

performUIElementAlphaTween(tween-name, element-name, alpha, speed, ease-type) - Performs an alpha tween on a(n) UI element.

performUIElementAngleTween(tween-name, element-name, angle, speed, ease-type) - Performs an angle tween on a(n) UI element.

performUIElementXTween(tween-name, element-name, x, speed, ease-type) - Performs a tween on the x position of a(n) UI element.

performUIElementYTween(tween-name, element-name, y, speed, ease-type) - Performs a tween on the y position of a(n) UI element.

performUIElementsAlphaTween(alpha, speed, ease-type) - Performs an alpha tween on all UI elements.

performUIElementsAngleTween(angle, speed, ease-type) - Performs an angle tween on all UI elements.

playActorAnimation(actor-name, animation, forced(bool)) - Makes an actor (bf, gf, or opponent) play an animation.

playSpriteAnimation(sprite-name, animation, forced(bool)) - Makes a sprite play an animation.

removeSprite(sprite-name) - Removes a sprite.

resetCameraPosition(x, y) - Removes the positioning set for camFollow by setCameraPosition().

setActorGraphicSize(sprite-name, x, y) - Sets an actor's graphic size (NOT the same as scale).

setActorOrder(actor-name, position) - Sets the position/ordering of an actor.

setActorPosition(actor-name, x, y) - Sets an actor's position.

setActorScale(actor-name, x, y) - Sets an actor's scale (NOT the same as graphic size).

setActorScrollFactor(actor-name, x, y) - Sets an actor's scroll factor.

setActorSpeed(actor-name, speed(int)) - Sets an actor's speed (how often they dance (or bop)).

setActorVisibility(actor-name, visible(bool)) - Sets an actor's visibility.

setBGGirlsScrollFactor(bg-girls-name, x, y) - Sets scroll factor for BG girls.

setBoyfriendCamFollowPosition(x, y) - Sets camFollow positions for Boyfriend.

setCameraAngle(camera-name, angle) - Sets the angle of a camera (notes, healthbar, etc.).

setCameraBGColor(camera-name, color) - Sets the background color of a camera.

setCameraPosition(x, y) - Sets camFollow's position and keeps it there.

setCameraVisibility(camera-name, visible(bool)) - Sets a camera's visibility.

setCameraZooms(camhud-zoom, camgame-zoom) - Sets the zoom amount for the cameras.

setCamPosPosition(x, y) - Sets camPos' positions.

setCurSongName(song-name) - Sets the current song name (any characters).

setCurStage(stage-name) - Sets curStage in PlayState.

setDefaultCamZoom(zoom) - Sets the default camera zoom.

setHealth(amount) - Sets the health to a certain amount.

setMinimumCamZoom(zoom) - Sets the minimum zoom of the camera before it can zoom again.

setNoteVisibility(player, visible(bool)) - Sets the visibility of any notes coming.

setOpponentCamFollowPosition(x, y) - Sets camFollow positions for your opponent.

setOpponentStrumAlpha(strum-number, alpha) - Sets the alpha of an opponent strum.

setOpponentStrumAngle(strum-number, angle) - Sets the angle of an opponent strum.

setOpponentStrumX(strum-number, x) - Sets the x position of an opponent strum.

setOpponentStrumY(strum-number, y) - Sets the y position of an opponent strum.

setPlayerStrumAlpha(strum-number, alpha) - Sets the alpha of a player strum.

setPlayerStrumAngle(strum-number, angle) - Sets the angle of a player strum.

setPlayerStrumX(strum-number, x) - Sets the x position of a player strum.

setPlayerStrumY(strum-number, y) - Sets the y position of a player strum.

setSpriteAlpha(sprite-name, alpha) - Sets the alpha of a sprite.

setSpriteAngle(sprite-name, angle) - Sets the angle of a sprite.

setSpriteBlendMode(sprite-name, blend-mode) - Sets the blend mode of a sprite.

setSpriteCamera(sprite-name, camera-name) - Sets a sprite's camera.

setSpriteGraphicSize(sprite-name, x, y) - Sets a sprite's graphic size (NOT the same as scale).

setSpriteOrder(sprite-name, position) - Sets the position/ordering of a sprite.

setSpritePosition(sprite-name, x, y) - Sets a sprite's position.

setSpriteScale(sprite-name, x, y) - Sets a sprite's scale (NOT the same as graphic size).

setSpriteScrollFactor(sprite-name, x, y) - Sets a sprite's scroll factor.

setSpriteVisibility(sprite-name, visible(bool)) - Sets a sprite's visibility.

setUIElementAlpha(element-number, alpha) - Sets the alpha of a single UI element.

setUIElementAngle(element-number, angle) - Sets the angle of a single UI element.

setUIElementX(element-number, x) - Sets the x position of a single UI element.

setUIElementY(element-number, y) - Sets the y position of a single UI element.

setUIElementVisibility(element-name, visible(bool)) - Sets a single UI element's visibility.

setUIElementsAlpha(alpha) - Sets the UI elements' alpha values.

setUIElementsAngle(angle) - Sets the UI elements' angle values.

setUIElementsVisibility(visible(bool)) - Sets the UI elements' visibility, the same way cutscenes do.

shakeCamera(camera-name, intensity, duration) - Shakes the given camera for set duration with set intensity.

updateSpriteHitbox(sprite-name) - Updates a sprite's hitbox.

Current RFE Lua callbacks:
beatHit - Checks for functions every beat hit.

actorAnimFinishCallback(callback) - Checks for functions when an actor's animation is finished.

create - Checks for functions on stage creation.

endSong - Checks for functions on song end.

spriteAnimFinishCallback(callback) - Checks for functions when a sprite's animation is finished.

goodNoteHit(noteData, isSustainNote, mustPress, noteType, noteID) - Used for notes, checked when a good note hit is made by the CPU or player.

noteMiss(noteData, isSustainNote, mustPress, noteType, noteID) - Used for notes also, checked when the player misses a note (whether it's by late timing or tapping when no notes are there).

opponentNoteHit(noteData, isSustainNote, mustPress, noteType, noteID) - Checks for functions when your opponent hits a note.

playerNoteHit(noteData, isSustainNote, mustPress, noteType, noteID) - Checks for functions when you hit a note.

postCreate - Checks for functions to run AFTER super.create().

postSongCountdown - Checks for functions to run AFTER the song countdown ends.

postUpdate - Checks for functions to run AFTER super.update().

preBeatHit - Checks for functions to run BEFORE super.beatHit().

preSongCountdown - Checks for functions to run BEFORE the song countdown begins.

preStepHit - Checks for functions to run BEFORE super.stepHit().

stepHit - Checks for functions every step hit.

update(elapsed) - Checks for functions every frame.